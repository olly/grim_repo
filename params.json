{"name":"GrimRepo","tagline":"An idiomatic Ruby wrapper for the GitHub v3 API – for humans, not computers.","body":"# GrimRepo\r\n\r\nAn idiomatic Ruby wrapper for the GitHub v3 API – for humans, not computers.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'grim_repo'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install grim_repo\r\n\r\n## Usage\r\n\r\n### The Client\r\n\r\nThe Client is the main entry point of the gem. All objects created using a particular client will retain a reference to it and use that for further API calls when accessing related resources.\r\n\r\n    username, password = 'grimrepo', 'hub'\r\n    client = GrimRepo::Client.new(username, password)\r\n\r\n### The Client's User\r\n\r\nThe Client is performing operations on behalf of a GitHub user.\r\n\r\n    user = client.user\r\n    # => #<GitHub::User:0x007fbe52068638>\r\n\r\n    user.login\r\n    # => 'grimrepo'\r\n\r\n### Fetching Other Users\r\n\r\nWe can also fetch the details of other individual users.\r\n\r\n    user = client.users('olly')\r\n    # => #<GitHub::User:0x007fbe5209b998>\r\n\r\n    user.login\r\n    # => 'olly'\r\n\r\n### Fetching Repositories\r\n\r\nWe can fetch the repositories of the client's user or the public repositories of another user.\r\n\r\n    repositories = client.repositories\r\n    # => #<Repositories:0x007fa37944e908>\r\n\r\n    user = client.users('mojombo')\r\n    repositories = user.repositories\r\n    # => #<Repositories:0x007fbca8ac7328>\r\n\r\nThe container is an [Enumerator][Enumerator] which transparently (and lazily) handles the API pagination.\r\n\r\nFor example, we can fetch the first 10 repositories, resulting in one HTTP request.\r\n\r\n    repositories.take(10)\r\n\r\nOr fetch them all, which will issue all the necessary HTTP requests to retrieve all the repositories.\r\n\r\n    repositories.to_a\r\n\r\n### Repository Forks\r\n\r\nThe forks container is also an [Enumerator][Enumerator] and also handles the pagination transparently.\r\n\r\n    repository.forks\r\n    # => #<Forks:0x007fa6734be800>\r\n\r\nWe can fetch a number of forks, or get them all.\r\n\r\n    repository.forks.take(5)\r\n    repository.forks.to_a\r\n\r\nWe can also get the count of the forks without any additional HTTP requests, because the count is included in the repository metadata. \r\n\r\n    repository.forks.count\r\n    # => 14\r\n\r\n_Note:_ if you pass an argument or use the block syntax this optimisation is by-passed and it will have to fetch all the forks from the API.\r\n\r\n### Repository Languages\r\n\r\nFetching the repository's languages is straightforward:\r\n\r\n    repository.languages.each do |language|\r\n      puts \"#{language.name} (#{languate.bytes})\"\r\n    end\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n### Running the Tests\r\n\r\nRun the test suite with:\r\n\r\n    $ rspec\r\n\r\nThere tests in `spec/features` hit the live API and capture the results using VCR. If you want to run the tests against the live API you'll need to configure some credentials using environment variables:\r\n\r\n    $ export GRIMREPO_TEST_USERNAME=username\r\n    $ export GRIMREPO_TEST_PASSWORD=password\r\n    $ rspec\r\n    \r\n## The Grim Repo\r\n![the Grim Repo](http://octodex.github.com/images/grim-repo.jpg)\r\n\r\nName inspiration & image from the [octodex](http://octodex.github.com/grim-repo).\r\n\r\n[Enumerator]: http://www.ruby-doc.org/core-2.0/Enumerator.html\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}